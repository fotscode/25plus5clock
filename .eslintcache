[{"C:\\Users\\cacut\\Desktop\\projects\\react\\25plus5clock\\src\\index.js":"1","C:\\Users\\cacut\\Desktop\\projects\\react\\25plus5clock\\src\\components\\Clock.jsx":"2"},{"size":335,"mtime":1612073563655,"results":"3","hashOfConfig":"4"},{"size":6908,"mtime":1612073536774,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"agrw06",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"C:\\Users\\cacut\\Desktop\\projects\\react\\25plus5clock\\src\\index.js",["12"],"C:\\Users\\cacut\\Desktop\\projects\\react\\25plus5clock\\src\\components\\Clock.jsx",["13"],"import React, { Component } from 'react';\r\n\r\n\r\nconst audioRef=\"https://sampleswap.org/samples-ghost/MELODIC%20LOOPS/SYNTH%20AND%20ELECTRONIC%20LOOPS/1382[kb]180_watch-beep-acid-melody.wav.mp3\";\r\n\r\nclass Clock extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state=({\r\n      session:25,\r\n      break:5,\r\n      current:\"Session\",\r\n      minutes:\"25\",\r\n      seconds:\"00\",\r\n      isRunning:false\r\n    });\r\n    \r\n    this.handleReset=this.handleReset.bind(this);\r\n    this.handleDecrementSession=this.handleDecrementSession.bind(this);\r\n    this.handleDecrementBreak=this.handleDecrementBreak.bind(this);\r\n    this.handleIncrementBreak=this.handleIncrementBreak.bind(this);\r\n    this.handleIncrementSession=this.handleIncrementSession.bind(this);\r\n    this.tick=this.tick.bind(this);\r\n    this.handleToggle=this.handleToggle.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n    document.getElementById(\"beep\").load();\r\n  }  \r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    if (!this.state.isRunning) return\r\n    let newCurrent=this.state.current;\r\n    let newSeconds=Number(this.state.seconds);\r\n    let newMinutes=Number(this.state.minutes);   \r\n    \r\n    if (this.state.seconds===\"01\"&&this.state.minutes===\"00\"){\r\n      document.getElementById(\"beep\").load();\r\n      document.getElementById(\"beep\").play();      \r\n    }\r\n    \r\n    \r\n    if (this.state.seconds===\"00\"&&this.state.minutes===\"00\"&&this.state.current===\"Session\"){\r\n      newCurrent=\"Break\";\r\n      newMinutes=this.state.break;\r\n      newSeconds=\"00\";  \r\n      if (newMinutes<10) newMinutes=\"0\"+newMinutes; \r\n    } \r\n    else if (this.state.seconds===\"00\"&&this.state.minutes===\"00\"&&this.state.current===\"Break\"){\r\n      newCurrent=\"Session\";\r\n      newMinutes=this.state.session;\r\n      newSeconds=\"00\";\r\n      if (newMinutes<10) newMinutes=\"0\"+newMinutes;  \r\n    } \r\n    else{\r\n      if (newSeconds>0){\r\n        newSeconds--;\r\n      } else{\r\n        newSeconds=\"59\";\r\n        newMinutes--;\r\n      } \r\n      if (newSeconds<10) newSeconds=\"0\"+newSeconds;\r\n      if (newMinutes<10) newMinutes=\"0\"+newMinutes;  \r\n    }\r\n\r\n    this.setState({\r\n      minutes: newMinutes ,\r\n      seconds: newSeconds,\r\n      current: newCurrent\r\n    });\r\n  }  \r\n  \r\n  handleToggle(){\r\n    this.setState({\r\n      isRunning:!this.state.isRunning\r\n    });\r\n  }\r\n  \r\n  handleReset(){\r\n    this.setState({\r\n      session:25,\r\n      break:5,\r\n      current:\"Session\",\r\n      minutes:\"25\",\r\n      seconds:\"00\",\r\n      isRunning:false\r\n    });\r\n    document.getElementById(\"beep\").load();\r\n  }\r\n  \r\n  handleDecrementSession(){\r\n    if (this.state.session<=1 || this.state.isRunning) return \r\n    else{\r\n      let newSession=this.state.session-1;\r\n      let newSeconds=this.state.seconds;\r\n      let newMinutes=this.state.minutes;\r\n      if (this.state.current===\"Session\"){\r\n        newSeconds=\"00\";\r\n        newMinutes=newSession;\r\n        if (newMinutes<10) newMinutes=\"0\"+newMinutes; \r\n      } \r\n      this.setState({\r\n        session:newSession,\r\n        minutes:newMinutes,\r\n        seconds:newSeconds\r\n      });\r\n    }\r\n  };\r\n    \r\n  handleDecrementBreak(){\r\n    if (this.state.break<=1||this.state.isRunning) return \r\n    else{\r\n      let newBreak=this.state.break-1;\r\n      let newSeconds=this.state.seconds;\r\n      let newMinutes=this.state.minutes;\r\n      if (this.state.current===\"Break\"){\r\n        newSeconds=\"00\";\r\n        newMinutes=newBreak;\r\n        if (newMinutes<10) newMinutes=\"0\"+newMinutes; \r\n      }\r\n      this.setState({\r\n        break:newBreak,\r\n        minutes:newMinutes,\r\n        seconds:newSeconds\r\n      });\r\n    }    \r\n  };\r\n  \r\n  handleIncrementSession(){\r\n    if (this.state.session>=60||this.state.isRunning) return\r\n    else{\r\n      let newSession=this.state.session+1;\r\n      let newSeconds=this.state.seconds;\r\n      let newMinutes=this.state.minutes;\r\n      if (this.state.current===\"Session\"){\r\n        newSeconds=\"00\";\r\n        newMinutes=newSession;\r\n        if (newMinutes<10) newMinutes=\"0\"+newMinutes; \r\n      }\r\n      this.setState({\r\n        session:newSession,\r\n        minutes:newMinutes,\r\n        seconds:newSeconds\r\n      });\r\n    }\r\n  }\r\n  \r\n  handleIncrementBreak(){\r\n    if (this.state.break>=60||this.state.isRunning) return \r\n    else{\r\n      let newBreak=this.state.break+1;\r\n      let newSeconds=this.state.seconds;\r\n      let newMinutes=this.state.minutes;\r\n      if (this.state.current===\"Break\"){\r\n        newSeconds=\"00\";\r\n        newMinutes=newBreak;\r\n        if (newMinutes<10) newMinutes=\"0\"+newMinutes;\r\n      }\r\n      this.setState({\r\n        break:newBreak,\r\n        minutes:newMinutes,\r\n        seconds:newSeconds\r\n      });\r\n    }    \r\n    \r\n  }\r\n  \r\n  render(){\r\n    return(\r\n      <div id=\"clock-container\">\r\n        <h1 className=\"highlight\">25 + 5 Clock</h1>\r\n        <section id=\"config-section\">\r\n          <div className=\"cfg-elem\">\r\n            <label for=\"break-length\" id=\"break-label\">Break Length</label>\r\n            <button \r\n              id=\"break-increment\" \r\n              onClick={this.handleIncrementBreak}\r\n              ><i className=\"fa fa-arrow-up fa-2x\"></i>\r\n            </button>\r\n            <p id=\"break-length\">{this.state.break}</p>\r\n            <button \r\n              id=\"break-decrement\"\r\n              onClick={this.handleDecrementBreak}\r\n              ><i className=\"fa fa-arrow-down fa-2x\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"cfg-elem\">\r\n            <label id=\"session-label\">Session Length</label>\r\n            <button \r\n              id=\"session-increment\" \r\n              onClick={this.handleIncrementSession}\r\n              ><i className=\"fa fa-arrow-up fa-2x\"></i>\r\n            </button>\r\n            <p id=\"session-length\">{this.state.session}</p>\r\n            <button \r\n              id=\"session-decrement\" \r\n              onClick={this.handleDecrementSession}\r\n              ><i className=\"fa fa-arrow-down fa-2x\"></i>\r\n            </button> \r\n          </div>\r\n        </section>\r\n        <section id=\"timer-section\">\r\n          <div id=\"timer-container\">\r\n            <label id=\"timer-label\">{this.state.current}</label>\r\n            <audio id=\"beep\" src={audioRef}></audio>\r\n            <h2 id=\"time-left\" className=\"highlight\">{this.state.minutes}:{this.state.seconds}</h2>\r\n          </div>\r\n        </section>\r\n        <section id=\"control-section\">\r\n          <button \r\n            id=\"start_stop\" \r\n            onClick={this.handleToggle}>\r\n            <i className=\"fa fa-play fa-2x\"></i>\r\n            <i className=\"fa fa-pause fa-2x\"></i>\r\n          </button>\r\n          <button id=\"reset\" onClick={this.handleReset}>\r\n            <i className=\"fa fa-refresh fa-2x\"></i>\r\n          </button>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;",["14","15"],{"ruleId":"16","severity":1,"message":"17","line":6,"column":2,"nodeType":"18","messageId":"19","endLine":8,"endColumn":3},{"ruleId":"20","severity":1,"message":"21","line":1,"column":17,"nodeType":"22","messageId":"23","endLine":1,"endColumn":26},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["28"],"no-negated-in-lhs",["29"],"no-global-assign","no-unsafe-negation"]